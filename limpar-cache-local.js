// ============================================================================
// SCRIPT JAVASCRIPT: Limpar cache local e for√ßar novos UUIDs
// Execute este script no console do navegador (F12 > Console)
// ============================================================================

console.log('üßπ Iniciando limpeza de cache...');

// Limpar todos os storages relacionados √† autentica√ß√£o
const storageKeys = [
  'global-auth-storage',
  'force-offline-user',
  'offline-user',
  'urban_crm_session',
  'secure-auth-storage',
  'auth-session',
  'user-session'
];

storageKeys.forEach(key => {
  try {
    localStorage.removeItem(key);
    sessionStorage.removeItem(key);
    console.log(`‚úÖ Removido: ${key}`);
  } catch (error) {
    console.log(`‚ö†Ô∏è Erro ao remover ${key}:`, error);
  }
});

// Limpar todos os itens que contenham "gerente-fixed-id" ou "corretor-fixed-id"
const allKeys = [...Object.keys(localStorage), ...Object.keys(sessionStorage)];
allKeys.forEach(key => {
  try {
    const localValue = localStorage.getItem(key);
    const sessionValue = sessionStorage.getItem(key);
    
    if (localValue && (localValue.includes('gerente-fixed-id') || localValue.includes('corretor-fixed-id'))) {
      localStorage.removeItem(key);
      console.log(`‚úÖ Removido localStorage: ${key}`);
    }
    
    if (sessionValue && (sessionValue.includes('gerente-fixed-id') || sessionValue.includes('corretor-fixed-id'))) {
      sessionStorage.removeItem(key);
      console.log(`‚úÖ Removido sessionStorage: ${key}`);
    }
  } catch (error) {
    console.log(`‚ö†Ô∏è Erro ao verificar ${key}:`, error);
  }
});

// For√ßar recarregamento da p√°gina para aplicar mudan√ßas
console.log('üîÑ Recarregando p√°gina...');
setTimeout(() => {
  window.location.reload();
}, 1000);

console.log('‚úÖ Limpeza conclu√≠da! A p√°gina ser√° recarregada automaticamente.');
