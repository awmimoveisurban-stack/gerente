// =====================================================
// TESTE CONSOLE - WHATSAPP (COPIAR E COLAR NO CONSOLE)
// =====================================================

// Cole este c√≥digo diretamente no console do navegador
// na p√°gina /gerente-whatsapp

(function testWhatsAppConsole() {
  console.log('üß™ Teste WhatsApp via Console...');
  
  try {
    // 1. Verificar se estamos na p√°gina correta
    if (!window.location.pathname.includes('whatsapp')) {
      console.log('‚ùå Navegue para /gerente-whatsapp primeiro');
      return;
    }
    
    console.log('‚úÖ P√°gina WhatsApp detectada');
    
    // 2. Buscar bot√µes WhatsApp
    const buttons = document.querySelectorAll('button');
    const whatsappButtons = Array.from(buttons).filter(btn => 
      btn.textContent && btn.textContent.includes('WhatsApp')
    );
    
    console.log('üì± Bot√µes WhatsApp encontrados:', whatsappButtons.length);
    
    whatsappButtons.forEach((btn, i) => {
      console.log(`   ${i + 1}. "${btn.textContent.trim()}" - Disabled: ${btn.disabled}`);
    });
    
    // 3. Buscar QR Code
    const qrImages = document.querySelectorAll('img');
    const qrCodes = Array.from(qrImages).filter(img => 
      img.alt && (img.alt.includes('QR') || img.alt.includes('qr'))
    );
    
    console.log('üîç QR Codes encontrados:', qrCodes.length);
    
    // 4. Buscar elementos de status
    const statusElements = document.querySelectorAll('[class*="badge"], [class*="status"]');
    const statusTexts = Array.from(statusElements)
      .map(el => el.textContent?.trim())
      .filter(text => text && text.length < 50);
    
    console.log('üìä Status encontrados:', statusTexts);
    
    // 5. Buscar elementos de erro
    const errorElements = document.querySelectorAll('[class*="error"], [class*="alert"]');
    const errorTexts = Array.from(errorElements)
      .map(el => el.textContent?.trim())
      .filter(text => text && text.length < 100);
    
    if (errorTexts.length > 0) {
      console.log('‚ö†Ô∏è Erros encontrados:', errorTexts);
    }
    
    // 6. Testar clique no bot√£o Conectar (se existir)
    const connectBtn = Array.from(buttons).find(btn => 
      btn.textContent && btn.textContent.includes('Conectar WhatsApp')
    );
    
    if (connectBtn) {
      console.log('üß™ Testando bot√£o Conectar WhatsApp...');
      
      if (!connectBtn.disabled) {
        console.log('‚úÖ Bot√£o habilitado - testando clique...');
        connectBtn.click();
        
        // Aguardar e verificar mudan√ßas
        setTimeout(() => {
          console.log('‚è∞ Verificando mudan√ßas ap√≥s clique...');
          
          // Verificar se apareceu QR Code
          const newQrCodes = document.querySelectorAll('img[alt*="QR"], img[alt*="qr"]');
          if (newQrCodes.length > qrCodes.length) {
            console.log('‚úÖ QR Code gerado com sucesso!');
          }
          
          // Verificar mudan√ßa de status
          const newStatusElements = document.querySelectorAll('[class*="badge"], [class*="status"]');
          const newStatusTexts = Array.from(newStatusElements)
            .map(el => el.textContent?.trim())
            .filter(text => text && text.length < 50);
          
          if (JSON.stringify(newStatusTexts) !== JSON.stringify(statusTexts)) {
            console.log('‚úÖ Status alterado:', newStatusTexts);
          }
          
          // Verificar se bot√£o mudou
          if (connectBtn.disabled) {
            console.log('‚úÖ Bot√£o foi desabilitado (loading)');
          }
          
        }, 3000);
        
      } else {
        console.log('‚ö†Ô∏è Bot√£o Conectar est√° desabilitado');
      }
    } else {
      console.log('‚ö†Ô∏è Bot√£o Conectar WhatsApp n√£o encontrado');
    }
    
    // 7. Verificar se h√° elementos de loading
    const loadingElements = document.querySelectorAll('[class*="loading"], [class*="spinner"]');
    if (loadingElements.length > 0) {
      console.log('‚è≥ Elementos de loading encontrados:', loadingElements.length);
    }
    
    // 8. Resumo final
    console.log('\nüìã RESUMO:');
    console.log('==========');
    console.log('‚úÖ P√°gina WhatsApp carregada');
    console.log(`üì± Bot√µes WhatsApp: ${whatsappButtons.length}`);
    console.log(`üîç QR Codes: ${qrCodes.length}`);
    console.log(`üìä Status: ${statusTexts.length > 0 ? statusTexts.join(', ') : 'Nenhum'}`);
    console.log(`‚ö†Ô∏è Erros: ${errorTexts.length > 0 ? errorTexts.length : 'Nenhum'}`);
    
    if (whatsappButtons.length > 0 && !errorTexts.length) {
      console.log('\nüéâ P√ÅGINA WHATSAPP FUNCIONANDO!');
      console.log('üí° Dica: Clique no bot√£o "Conectar WhatsApp" para testar');
    } else if (errorTexts.length > 0) {
      console.log('\n‚ùå PROBLEMAS DETECTADOS:');
      errorTexts.forEach((error, i) => {
        console.log(`   ${i + 1}. ${error}`);
      });
    } else {
      console.log('\n‚ö†Ô∏è P√ÅGINA CARREGADA MAS PODE TER PROBLEMAS');
    }
    
  } catch (error) {
    console.error('‚ùå Erro no teste:', error);
  }
})();

console.log('üîç Teste conclu√≠do. Verifique os resultados acima.');
