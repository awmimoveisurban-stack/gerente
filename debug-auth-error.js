// üß™ DIAGN√ìSTICO DO ERRO DE AUTENTICA√á√ÉO
// Execute este script no console do navegador

async function debugAuthError() {
  console.log('üîç DIAGN√ìSTICO DO ERRO DE AUTENTICA√á√ÉO');
  console.log('---');

  try {
    // 1. Verificar se supabase est√° dispon√≠vel
    if (typeof supabase === 'undefined') {
      console.error('‚ùå Supabase n√£o est√° carregado');
      return;
    }
    console.log('‚úÖ Supabase carregado');

    // 2. Verificar configura√ß√£o do cliente
    console.log('\nüìã 2. Verificando configura√ß√£o do cliente...');
    console.log('URL:', supabase.supabaseUrl);
    console.log('Key:', supabase.supabaseKey ? '‚úÖ Presente' : '‚ùå Ausente');
    console.log('Auth config:', supabase.auth);

    // 3. Verificar se o usu√°rio corretor existe no banco
    console.log('\nüë§ 3. Verificando usu√°rio corretor no banco...');
    
    // Tentar fazer uma consulta direta (sem autentica√ß√£o)
    const { data: users, error: usersError } = await supabase
      .from('profiles')
      .select('email, full_name')
      .eq('email', 'corretor@imobiliaria.com');

    if (usersError) {
      console.error('‚ùå Erro ao consultar usu√°rios:', usersError);
    } else {
      console.log('Usu√°rios encontrados:', users);
      if (users && users.length > 0) {
        console.log('‚úÖ Usu√°rio corretor existe no banco');
      } else {
        console.log('‚ùå Usu√°rio corretor n√£o existe no banco');
      }
    }

    // 4. Testar login com diferentes combina√ß√µes
    console.log('\nüîê 4. Testando diferentes combina√ß√µes de login...');
    
    const testCredentials = [
      { email: 'corretor@imobiliaria.com', password: '12345678', desc: 'Credenciais corretas' },
      { email: 'corretor@imobiliaria.com', password: '123456', desc: 'Senha alternativa' },
      { email: 'corretor@imobiliaria.com', password: 'admin123', desc: 'Senha admin' },
    ];

    for (const cred of testCredentials) {
      console.log(`\nTestando: ${cred.desc}`);
      console.log(`Email: ${cred.email}`);
      console.log(`Senha: ${cred.password}`);
      
      try {
        const { data, error } = await supabase.auth.signInWithPassword({
          email: cred.email,
          password: cred.password
        });

        if (error) {
          console.log(`‚ùå Erro: ${error.message}`);
          console.log(`C√≥digo: ${error.status}`);
        } else {
          console.log('‚úÖ Login bem-sucedido!');
          console.log('Usu√°rio:', data.user?.email);
          break;
        }
      } catch (err) {
        console.log(`‚ùå Exce√ß√£o: ${err.message}`);
      }
    }

    // 5. Verificar configura√ß√£o de autentica√ß√£o do Supabase
    console.log('\n‚öôÔ∏è 5. Verificando configura√ß√£o de autentica√ß√£o...');
    
    try {
      const { data: authConfig, error: configError } = await supabase.auth.getSession();
      if (configError) {
        console.log('‚ùå Erro na configura√ß√£o de auth:', configError);
      } else {
        console.log('‚úÖ Configura√ß√£o de auth OK');
        console.log('Sess√£o atual:', authConfig.session ? 'Ativa' : 'Inativa');
      }
    } catch (err) {
      console.log('‚ùå Erro ao verificar configura√ß√£o:', err);
    }

    // 6. Verificar se h√° problemas de CORS ou rede
    console.log('\nüåê 6. Testando conectividade...');
    
    try {
      const response = await fetch('https://bxtuynqauqasigcbocbm.supabase.co/auth/v1/settings', {
        method: 'GET',
        headers: {
          'apikey': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImJ4dHV5bnFhdXFhc2lnY2JvY2JtIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTk3MTU2NDksImV4cCI6MjA3NTI5MTY0OX0.WJ2fQy8gICtVqEVHxQxpaeuVzpKJp1SIHv7oIme9v2o',
          'Content-Type': 'application/json'
        }
      });
      
      if (response.ok) {
        console.log('‚úÖ Conectividade com Supabase OK');
      } else {
        console.log(`‚ùå Problema de conectividade: ${response.status}`);
      }
    } catch (err) {
      console.log('‚ùå Erro de rede:', err.message);
    }

    // 7. Resumo do diagn√≥stico
    console.log('\nüéØ RESUMO DO DIAGN√ìSTICO:');
    console.log('Execute este script e verifique:');
    console.log('1. Se o usu√°rio corretor existe no banco');
    console.log('2. Se alguma combina√ß√£o de login funcionou');
    console.log('3. Se h√° problemas de conectividade');
    console.log('4. Se a configura√ß√£o do Supabase est√° correta');

  } catch (error) {
    console.error('‚ùå Erro geral no diagn√≥stico:', error);
  }
}

// Executar diagn√≥stico
debugAuthError();
