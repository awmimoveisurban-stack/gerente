// Teste da nova nomenclatura de inst√¢ncias WhatsApp
async function testNovaNomenclatura() {
  console.log('üéØ Testando nova nomenclatura de inst√¢ncias...');
  
  try {
    // Verificar se Supabase est√° dispon√≠vel
    if (!window.supabase) {
      console.log('‚ùå Supabase client n√£o encontrado');
      return;
    }
    
    // Obter dados do usu√°rio
    const { data: { user }, error } = await window.supabase.auth.getUser();
    
    if (error) {
      console.log('‚ùå Erro ao obter usu√°rio:', error);
      return;
    }
    
    if (!user) {
      console.log('‚ùå Usu√°rio n√£o encontrado - fa√ßa login primeiro');
      return;
    }
    
    console.log('\nüìä DADOS DO USU√ÅRIO:');
    console.log('=====================');
    console.log('Email:', user.email);
    console.log('ID:', user.id);
    
    // Gerar nome da inst√¢ncia com nova nomenclatura
    console.log('\nüîß NOVA NOMENCLATURA:');
    console.log('=====================');
    
    const userEmail = user.email;
    if (!userEmail) {
      console.log('‚ùå Email n√£o encontrado');
      return;
    }
    
    // Processo de limpeza do email
    console.log('1. Email original:', userEmail);
    
    const cleanEmail = userEmail
      .toLowerCase()
      .replace('@', '-')
      .replace(/\./g, '-')
      .replace(/[^a-z0-9-]/g, '') // Remove special chars except hyphens
      .substring(0, 40); // Limit length
    
    console.log('2. Email limpo:', cleanEmail);
    
    const instanceName = `Usuario-${cleanEmail}`;
    console.log('3. Nome da inst√¢ncia:', instanceName);
    console.log('4. Tamanho:', instanceName.length, 'caracteres');
    
    // Verificar compatibilidade
    console.log('\n‚úÖ VERIFICA√á√ÉO DE COMPATIBILIDADE:');
    console.log('==================================');
    
    if (instanceName.length > 50) {
      console.log('‚ö†Ô∏è ATEN√á√ÉO: Nome muito longo para Evolution API');
    } else {
      console.log('‚úÖ Nome dentro dos limites aceit√°veis');
    }
    
    if (/[^a-z0-9-]/.test(instanceName)) {
      console.log('‚ö†Ô∏è ATEN√á√ÉO: Cont√©m caracteres especiais');
    } else {
      console.log('‚úÖ Cont√©m apenas caracteres permitidos (a-z, 0-9, -)');
    }
    
    // Exemplos para outros usu√°rios
    console.log('\nüéØ EXEMPLOS DE NOMENCLATURA:');
    console.log('=============================');
    console.log('Usu√°rio atual:', instanceName);
    console.log('Exemplo 1: gerente@imobiliaria.com ‚Üí Usuario-gerente-imobiliaria-com');
    console.log('Exemplo 2: joao@empresa.com.br ‚Üí Usuario-joao-empresa-com-br');
    console.log('Exemplo 3: maria.silva@teste.org ‚Üí Usuario-maria-silva-teste-org');
    
    // Testar cria√ß√£o de inst√¢ncia (simula√ß√£o)
    console.log('\nüß™ SIMULA√á√ÉO DE CRIA√á√ÉO:');
    console.log('========================');
    console.log('Nome da inst√¢ncia que seria criada:', instanceName);
    console.log('Status: Pronto para criar inst√¢ncia individual');
    
    return instanceName;
    
  } catch (error) {
    console.log('‚ùå Erro durante teste:', error);
  }
}

// Executar teste
testNovaNomenclatura();
