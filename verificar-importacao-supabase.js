// Verifica√ß√£o da importa√ß√£o do Supabase
// Execute no console do navegador

async function verificarImportacaoSupabase() {
  console.log('üß™ Verificando importa√ß√£o do Supabase...');
  
  try {
    // 1. Verificar se h√° arquivos de configura√ß√£o
    console.log('\nüìã 1. Verificando arquivos de configura√ß√£o...');
    
    // Verificar se h√° arquivos relacionados ao Supabase
    const scripts = document.querySelectorAll('script[src*="supabase"], script[src*="esm.sh"]');
    console.log('Scripts relacionados ao Supabase:', scripts.length);
    
    // Verificar se h√° imports no c√≥digo
    const allScripts = document.querySelectorAll('script');
    let foundImports = false;
    
    allScripts.forEach((script, index) => {
      if (script.textContent && script.textContent.includes('supabase')) {
        console.log(`Script ${index} cont√©m supabase:`, script.textContent.substring(0, 200) + '...');
        foundImports = true;
      }
    });
    
    if (!foundImports) {
      console.log('‚ö†Ô∏è Nenhum import do Supabase encontrado nos scripts');
    }
    
    // 2. Verificar se h√° m√≥dulos carregados
    console.log('\nüìã 2. Verificando m√≥dulos carregados...');
    
    // Verificar se h√° m√≥dulos do Supabase
    if (window.__SUPABASE__) {
      console.log('‚úÖ M√≥dulo Supabase encontrado:', window.__SUPABASE__);
    } else {
      console.log('‚ùå M√≥dulo Supabase n√£o encontrado');
    }
    
    // 3. Verificar se h√° configura√ß√£o manual
    console.log('\nüìã 3. Verificando configura√ß√£o manual...');
    
    const supabaseUrl = 'https://bxtuynqauqasigcbocbm.supabase.co';
    const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImJ4dHV5bnFhdXFhc2lnY2JvY2JtIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTk3MTU2NDksImV4cCI6MjA3NTI5MTY0OX0.WJ2fQy8gICtVqEVHxQxpaeuVzpKJp1SIHv7oIme9v2o';
    
    try {
      // Tentar criar client manualmente
      const { createClient } = await import('https://esm.sh/@supabase/supabase-js@2');
      const supabase = createClient(supabaseUrl, supabaseKey);
      
      console.log('‚úÖ Supabase client criado manualmente');
      
      // Testar conex√£o
      const { data, error } = await supabase.auth.getSession();
      
      if (error) {
        console.log('‚ùå Erro ao obter sess√£o:', error);
      } else if (data.session) {
        console.log('‚úÖ Sess√£o ativa encontrada:', data.session.user?.email);
        console.log('Token:', data.session.access_token?.substring(0, 20) + '...');
        
        // Testar Edge Function com token
        const response = await fetch('https://bxtuynqauqasigcbocbm.supabase.co/functions/v1/whatsapp-connect', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'Authorization': `Bearer ${data.session.access_token}`
          },
          body: JSON.stringify({ action: 'test' })
        });
        
        console.log('Edge Function Status:', response.status);
        const responseData = await response.text();
        console.log('Response:', responseData);
        
      } else {
        console.log('‚ö†Ô∏è Nenhuma sess√£o ativa');
        
        // Tentar fazer login manualmente
        console.log('\nüìã Tentando fazer login manualmente...');
        
        // Nota: Voc√™ precisar√° fornecer credenciais v√°lidas
        console.log('üí° Para fazer login, execute:');
        console.log(`
        const { data, error } = await supabase.auth.signInWithPassword({
          email: 'seu-email@exemplo.com',
          password: 'sua-senha'
        });
        `);
      }
      
    } catch (error) {
      console.log('‚ùå Erro ao criar Supabase client:', error);
    }
    
    // 4. Sugest√µes de corre√ß√£o
    console.log('\nüí° SUGEST√ïES DE CORRE√á√ÉO:');
    
    console.log('1. ‚ùå Supabase client n√£o inicializado');
    console.log('2. üîß Verificar se o arquivo .env est√° configurado');
    console.log('3. üîß Verificar se o Supabase est√° sendo importado');
    console.log('4. üîß Reiniciar servidor de desenvolvimento');
    console.log('5. üîß Verificar se h√° erros no console');
    
    console.log('\nüöÄ PR√ìXIMOS PASSOS:');
    console.log('1. Configure o arquivo .env');
    console.log('2. Reinicie o servidor');
    console.log('3. Verifique se o Supabase est√° sendo importado');
    console.log('4. Teste a autentica√ß√£o');
    
  } catch (error) {
    console.log(`‚ùå Erro na verifica√ß√£o: ${error.message}`);
  }
}

// Executar verifica√ß√£o
verificarImportacaoSupabase();
